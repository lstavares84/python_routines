# Tabela de distância entre as capitais
distancias = {
    "SE:SE": 0,
    "PA:SE": 2079,
    "PA:PA": 0,
    "MG:SE": 1578,
    "MG:PA": 2824,
    "MG:MG": 0,
    "RR:SE": 6000,
    "RR:PA": 6083,
    "RR:MG": 4736,
    "RR:RR": 0,
    "DF:SE": 1652,
    "DF:PA": 2120,
    "DF:MG": 716,
    "DF:RR": 4275,
    "DF:DF": 0,
    "MS:SE": 2765,
    "MS:PA": 2942,
    "MS:MG": 1453,
    "MS:RR": 3836,
    "MS:DF": 1134,
    "MS:MS": 0,
    "MT:SE": 2775,
    "MT:PA": 2941,
    "MT:MG": 1594,
    "MT:RR": 3142,
    "MT:DF": 1133,
    "MT:MS": 694,
    "MT:MT": 0,
    "PR:SE": 2595,
    "PR:PA": 3193,
    "PR:MG": 1004,
    "PR:RR": 4821,
    "PR:DF": 1366,
    "PR:MS": 991,
    "PR:MT": 1679,
    "PR:PR": 0,
    "SC:SE": 2892,
    "SC:PA": 3500,
    "SC:MG": 1301,
    "SC:RR": 5128,
    "SC:DF": 1673,
    "SC:MS": 1298,
    "SC:MT": 1986,
    "SC:PR": 300,
    "SC:SC": 0,
    "CE:SE": 1183,
    "CE:PA": 1610,
    "CE:MG": 2528,
    "CE:RR": 6548,
    "CE:DF": 2200,
    "CE:MS": 3407,
    "CE:MT": 3406,
    "CE:PR": 3541,
    "CE:SC": 3838,
    "CE:CE": 0,
    "GO:SE": 1848,
    "GO:PA": 2017,
    "GO:MG": 906,
    "GO:RR": 4076,
    "GO:DF": 209,
    "GO:MS": 935,
    "GO:MT": 934,
    "GO:PR": 1186,
    "GO:SC": 1493,
    "GO:CE": 2482,
    "GO:GO": 0,
    "PB:SE": 611,
    "PB:PA": 2161,
    "PB:MG": 2171,
    "PB:RR": 6593,
    "PB:DF": 2245,
    "PB:MS": 3357,
    "PB:MT": 3366,
    "PB:PR": 3188,
    "PB:SC": 3485,
    "PB:CE": 688,
    "PB:GO": 2442,
    "PB:PB": 0,
    "AP:AP": 0,
    "AL:SE": 294,
    "AL:PA": 2173,
    "AL:MG": 1854,
    "AL:RR": 6279,
    "AL:DF": 1930,
    "AL:MS": 3040,
    "AL:MT": 3049,
    "AL:PR": 2871,
    "AL:SC": 3168,
    "AL:CE": 1075,
    "AL:GO": 2125,
    "AL:PB": 395,
    "AM:SE": 5215,
    "AM:PA": 5298,
    "AM:MG": 3951,
    "AM:RR": 785,
    "AM:DF": 3490,
    "AM:MS": 3051,
    "AM:MT": 2357,
    "AM:PR": 4036,
    "AM:SC": 4443,
    "AM:CE": 5763,
    "AM:GO": 3291,
    "AM:PB": 5808,
    "RN:SE": 788,
    "RN:PA": 2108,
    "RN:MG": 2348,
    "RN:RR": 6770,
    "RN:DF": 2422,
    "RN:MS": 3534,
    "RN:MT": 3543,
    "RN:PR": 3365,
    "RN:SC": 3662,
    "RN:CE": 537,
    "RN:GO": 2618,
    "RN:PB": 185,
    "TO:SE": 1662,
    "TO:PA": 1283,
    "TO:MG": 1690,
    "TO:RR": 4926,
    "TO:DF": 973,
    "TO:MS": 1785,
    "TO:MT": 1784,
    "TO:PR": 2036,
    "TO:SC": 2336,
    "TO:CE": 2035,
    "TO:GO": 874,
    "TO:PB": 2253,
    "RS:SE": 3296,
    "RS:PA": 3852,
    "RS:MG": 1712,
    "RS:RR": 5348,
    "RS:DF": 2027,
    "RS:MS": 1518,
    "RS:MT": 2206,
    "RS:PR": 711,
    "RS:SC": 476,
    "RS:CE": 4242,
    "RS:GO": 1847,
    "RS:PB": 3889,
    "RO:SE": 4230,
    "RO:PA": 4397,
    "RO:MG": 3050,
    "RO:RR": 1686,
    "RO:DF": 2589,
    "RO:MS": 2150,
    "RO:MT": 1456,
    "RO:PR": 3135,
    "RO:SC": 3442,
    "RO:CE": 4862,
    "RO:GO": 2390,
    "RO:PB": 4822,
    "PE:SE": 501,
    "PE:PA": 2074,
    "PE:MG": 2061,
    "PE:RR": 6483,
    "PE:DF": 2135,
    "PE:MS": 3247,
    "PE:MT": 3255,
    "PE:PR": 3078,
    "PE:SC": 3375,
    "PE:CE": 800,
    "PE:GO": 2332,
    "PE:PB": 120,
    "AC:SE": 4763,
    "AC:PA": 4931,
    "AC:MG": 3584,
    "AC:RR": 2230,
    "AC:DF": 3123,
    "AC:MS": 2684,
    "AC:MT": 1990,
    "AC:PR": 3669,
    "AC:SC": 3976,
    "AC:CE": 5396,
    "AC:GO": 2924,
    "AC:PB": 5356,
    "RJ:SE": 1855,
    "RJ:PA": 3250,
    "RJ:MG": 434,
    "RJ:RR": 5159,
    "RJ:DF": 1148,
    "RJ:MS": 1444,
    "RJ:MT": 2017,
    "RJ:PR": 852,
    "RJ:SC": 1144,
    "RJ:CE": 2805,
    "RJ:GO": 1338,
    "RJ:PB": 2448,
    "BA:SE": 356,
    "BA:PA": 2100,
    "BA:MG": 1372,
    "BA:RR": 5794,
    "BA:DF": 1446,
    "BA:MS": 2568,
    "BA:MT": 2566,
    "BA:PR": 2385,
    "BA:SC": 2682,
    "BA:CE": 1389,
    "BA:GO": 1643,
    "BA:PB": 949,
    "MA:SE": 1578,
    "MA:PA": 806,
    "MA:MG": 2738,
    "MA:RR": 6120,
    "MA:DF": 2157,
    "MA:MS": 2979,
    "MA:MT": 2978,
    "MA:PR": 3230,
    "MA:SC": 3537,
    "MA:CE": 1070,
    "MA:GO": 2054,
    "MA:PB": 1660,
    "SP:SE": 2187,
    "SP:PA": 2933,
    "SP:MG": 586,
    "SP:RR": 4756,
    "SP:DF": 1015,
    "SP:MS": 1014,
    "SP:MT": 1614,
    "SP:PR": 408,
    "SP:SC": 705,
    "SP:CE": 3127,
    "SP:GO": 926,
    "SP:PB": 2770,
    "PI:SE": 1142,
    "PI:PA": 947,
    "PI:MG": 2302,
    "PI:RR": 6052,
    "PI:DF": 1789,
    "PI:MS": 2911,
    "PI:MT": 2910,
    "PI:PR": 3143,
    "PI:SC": 3450,
    "PI:CE": 634,
    "PI:GO": 1986,
    "PI:PB": 1224,
    "ES:SE": 1408,
    "ES:PA": 3108,
    "ES:MG": 524,
    "ES:RR": 5261,
    "ES:DF": 1239,
    "ES:MS": 1892,
    "ES:MT": 2119,
    "ES:PR": 1300,
    "ES:SC": 1597,
    "ES:CE": 2397,
    "ES:GO": 1428,
    "ES:PB": 2001,
    "AL:AL": 0,
    "AM:AL": 5491,
    "AM:AM": 0,
    "RN:AL": 572,
    "RN:AM": 5985,
    "RN:RN": 0,
    "TO:AL": 1851,
    "TO:AM": 4141,
    "TO:RN": 2345,
    "TO:TO": 0,
    "RS:AL": 3572,
    "RS:AM": 4563,
    "RS:RN": 4066,
    "RS:TO": 2747,
    "RS:RS": 0,
    "RO:AL": 4505,
    "RO:AM": 901,
    "RO:RN": 4998,
    "RO:TO": 3662,
    "RO:RO": 0,
    "PE:AL": 285,
    "PE:AM": 5698,
    "PE:RN": 297,
    "PE:TO": 2058,
    "PE:RS": 3779,
    "PE:RO": 4712,
    "PE:PE": 0,
    "AC:AL": 5039,
    "AC:AM": 1445,
    "AC:RN": 5533,
    "AC:TO": 3764,
    "AC:RS": 4196,
    "AC:RO": 544,
    "AC:PE": 5243,
    "AC:AC": 0,
    "RJ:AL": 2131,
    "RJ:AM": 4374,
    "RJ:RN": 2625,
    "RJ:TO": 2124,
    "RJ:RS": 1553,
    "RJ:RO": 3473,
    "RJ:PE": 2338,
    "RJ:AC": 4007,
    "RJ:RJ": 0,
    "BA:AL": 632,
    "BA:AM": 5009,
    "BA:RN": 1126,
    "BA:TO": 1454,
    "BA:RS": 3554,
    "BA:RO": 4494,
    "BA:PE": 665,
    "BA:AC": 4941,
    "BA:RJ": 1324,
    "BA:BA": 0,
    "MA:AL": 2221,
    "MA:AM": 2072,
    "MA:RN": 1807,
    "MA:TO": 800,
    "MA:RS": 4097,
    "MA:RO": 5021,
    "MA:PE": 2324,
    "MA:AC": 5312,
    "MA:RJ": 2451,
    "MA:BA": 1290,
    "MA:MA": 0,
    "SP:AL": 2490,
    "SP:AM": 3639,
    "SP:RN": 2169,
    "SP:TO": 2161,
    "SP:RS": 1203,
    "SP:RO": 3087,
    "SP:PE": 1962,
    "SP:AC": 3756,
    "SP:RJ": 435,
    "SP:BA": 1482,
    "SP:MA": 2462,
    "SP:SP": 0,
    "PI:AL": 1846,
    "PI:AM": 3449,
    "PI:RN": 1454,
    "PI:TO": 1790,
    "PI:RS": 3041,
    "PI:RO": 3956,
    "PI:PE": 1595,
    "PI:AC": 4744,
    "PI:RJ": 1987,
    "PI:BA": 905,
    "PI:MA": 461,
    "PI:SP": 2702,
    "PI:PI": 0,
    "ES:AL": 1929,
    "ES:AM": 3483,
    "ES:RN": 1793,
    "ES:TO": 1820,
    "ES:RS": 2292,
    "ES:RO": 3207,
    "ES:PE": 1360,
    "ES:AC": 4453,
    "ES:RJ": 367,
    "ES:BA": 982,
    "ES:MA": 2177,
    "ES:SP": 951,
    "ES:PI": 1984,
    "ES:ES": 0
}

# Tabela de alíquotas de ICMS interestadual por estado
tabela_icms = {
    "AC": {
        "aliquota_interna": 17,
        "aliquota_interestadual": 12
    },
    "AL": {
        "aliquota_interna": 18,
        "aliquota_interestadual": 12
    },
    "AM": {
        "aliquota_interna": 18,
        "aliquota_interestadual": 12
    },
    "AP": {
        "aliquota_interna": 18,
        "aliquota_interestadual": 12
    },
    "BA": {
        "aliquota_interna": 18,
        "aliquota_interestadual": 12
    },
    "CE": {
        "aliquota_interna": 18,
        "aliquota_interestadual": 12
    },
    "DF": {
        "aliquota_interna": 18,
        "aliquota_interestadual": 12
    },
    "ES": {
        "aliquota_interna": 17,
        "aliquota_interestadual": 12
    },
    "GO": {
        "aliquota_interna": 17,
        "aliquota_interestadual": 12
    },
    "MA": {
        "aliquota_interna": 18,
        "aliquota_interestadual": 12
    },
    "MG": {
        "aliquota_interna": 18,
        "aliquota_interestadual": 12
    },
    "MS": {
        "aliquota_interna": 17,
        "aliquota_interestadual": 12
    },
    "MT": {
        "aliquota_interna": 17,
        "aliquota_interestadual": 12
    },
    "PA": {
        "aliquota_interna": 17,
        "aliquota_interestadual": 12
    },
    "PB": {
        "aliquota_interna": 18,
        "aliquota_interestadual": 12
    },
    "PE": {
        "aliquota_interna": 18,
        "aliquota_interestadual": 12
    },
    "PI": {
        "aliquota_interna": 18,
        "aliquota_interestadual": 12
    },
    "PR": {
        "aliquota_interna": 18,
        "aliquota_interestadual": 12
    },
    "RJ": {
        "aliquota_interna": 20,  # Ou 18% em algumas situações
        "aliquota_interestadual": 12
    },
    "RN": {
        "aliquota_interna": 18,  # Ou 17,5% em algumas situações
        "aliquota_interestadual": 12
    },
}

# Tabela de preços do óleo diesel por estado
tabela_preco_diesel = {
    "AC": 6.52,
    "AL": 4.75,
    "AM": 5.16,
    "AP": 5.06,
    "BA": 5.12,
    "CE": 5.04,
    "DF": 4.79,
    "ES": 4.89,
    "GO": 4.80,
    "MA": 4.74,
    "MG": 4.79,
    "MS": 5.04,
    "MT": 5.12,
    "PA": 5.37,
    "PB": 4.75,
    "PE": 5.13,
    "PI": 4.87,
    "PR": 4.82,
    "RJ": 5.06,
    "RN": 5.02,
    "RO": 5.35,
    "RR": 5.37,
    "SC": 4.96,
    "SP": 4.91,
    "SE": 4.93,
    "TO": 4.95,
}

# Função para calcular a distância entre duas capitais
def calcular_distancia(capital_origem, capital_destino):
    chave = f"{capital_origem}:{capital_destino}"
    if chave in distancias:
        return distancias[chave]
    else:
        return None

# Exemplo de uso:
estado_origem = "SP"
estado_destino = "RJ"

if estado_origem in tabela_icms and estado_destino in tabela_icms:
    aliquota_interna = tabela_icms[estado_origem]["aliquota_interna"]
    aliquota_interestadual = tabela_icms[estado_destino]["aliquota_interestadual"]
    
    if estado_origem in tabela_preco_diesel:
        preco_diesel = tabela_preco_diesel[estado_origem]
        valor_icms = (preco_diesel * aliquota_interestadual / 100) - (preco_diesel * aliquota_interna / 100)
        
        # Calcular a distância entre as capitais
        capital_origem = estado_origem
        capital_destino = estado_destino
        distancia = calcular_distancia(capital_origem, capital_destino)
        
        if distancia is not None:
            print(f"Preço do óleo diesel em {estado_origem}: R${preco_diesel}")
            print(f"Alíquota de ICMS de {estado_origem} para {estado_destino}: {aliquota_interna}% (interna) x {aliquota_interestadual}% (interestadual)")
            print(f"Distância entre {capital_origem} e {capital_destino}: {distancia} km")
            print(f"Valor do ICMS a ser pago: R${valor_icms:.2f}")
        else:
            print(f"Não foi possível calcular a distância entre {capital_origem} e {capital_destino}.")
    else:
        print(f"Preço do óleo diesel em {estado_origem} não encontrado na tabela.")
else:
    print("Estado de origem ou destino não encontrado na tabela.")